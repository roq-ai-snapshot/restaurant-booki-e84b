generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model chef {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String     @db.Uuid
  restaurant_id    String     @db.Uuid
  speciality       String     @db.VarChar(255)
  experience_years Int
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  restaurant       restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String     @db.VarChar(255)
  description   String?    @db.VarChar(255)
  price         Int
  restaurant_id String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservation {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  reservation_date DateTime   @db.Timestamp(6)
  reservation_time DateTime   @db.Timestamp(6)
  number_of_people Int
  user_id          String     @db.Uuid
  restaurant_id    String     @db.Uuid
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  restaurant       restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?       @db.VarChar(255)
  address       String?       @db.VarChar(255)
  phone_number  String?       @db.VarChar(20)
  opening_hours String?       @db.VarChar(50)
  closing_hours String?       @db.VarChar(50)
  name          String        @db.VarChar(255)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  user_id       String        @db.Uuid
  tenant_id     String        @db.VarChar(255)
  chef          chef[]
  menu          menu[]
  reservation   reservation[]
  user          user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  waiter        waiter[]
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  chef        chef[]
  reservation reservation[]
  restaurant  restaurant[]
  waiter      waiter[]
}

model waiter {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String     @db.Uuid
  restaurant_id    String     @db.Uuid
  shift_start_time DateTime   @db.Timestamp(6)
  shift_end_time   DateTime   @db.Timestamp(6)
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  restaurant       restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
